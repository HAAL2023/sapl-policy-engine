name: build

on:
  push:
    branches: [master]
    paths-ignore: ['sapl-documentation/**']
  
jobs:
  build:

    runs-on: ubuntu-latest
 
    steps:
    - name: Check out
      uses: actions/checkout@v2
      with:
        # avoid shallow clone to ensure correct sonarqube auto assignment
        fetch-depth: 0
        
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11

    - name: Configure servers
      uses: s4u/maven-settings-action@v2.3.0
      with:
        githubServer: false
        servers: |
          [{
              "id": "ossrh", 
              "username": "${{ secrets.OSSRH_USERNAME }}",
              "password": "${{ secrets.OSSRH_PASSWORD }}"
           },{
              "id": "ghcr.io",
              "username": "${{ secrets.GHUB_USERNAME }}", 
              "password": "${{ secrets.GHUB_ACCESS_TOKEN }}"
           },{
              "id": "github", 
              "username": "${{ secrets.GHUB_USERNAME }}",
              "password": "${{ secrets.GHUB_ACCESS_TOKEN }}"
           }]
    
    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '12'
    
    - name: Cache Maven dependencies
      uses: actions/cache@v2      
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
          
    - name: Build with Maven (JUnit, JaCoCo, Sonar) 
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: mvn -B org.jacoco:jacoco-maven-plugin:prepare-agent install org.jacoco:jacoco-maven-plugin:report sonar:sonar -Dsonar.host.url=https://sonar.ftk.de -Dsonar.login=${SONAR_TOKEN} -Dsonar.exclusions=**/xtext-gen/**/*,**/xtend-gen/**/*,**/emf-gen/**/* -P production,h2,mariadb

    - name: Install GPG Code Signing Key
      run: |
        cat <(echo -e "${{ secrets.OSSRH_GPG_SECRET_KEY }}") | gpg --batch --import
        gpg --list-secret-keys --keyid-format LONG

    - name: Deploy Maven artefacts
      run: mvn -B --no-transfer-progress -Dgpg.passphrase=${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD }} -DskipTests -P publish,production,h2,mariadb clean deploy      

    - name: Build and push SAPL Server LT Docker image
      run: |
        mvn -B dockerfile:build -pl sapl-server-lt -P docker || exit 1
        mvn -B dockerfile:push -pl sapl-server-lt -P docker
       
    - name: Build and push SAPL Server CE Docker image
      run: |
        mvn -B clean package dockerfile:build -pl sapl-server-ce -P docker,production,mariadb,!h2 || exit 1
        mvn -B dockerfile:push -pl sapl-server-ce -P docker,production,mariadb,!h2
           
    - name: Trigger CI build of downstream repositories
      run: |
        curl -XPOST -u "${{ secrets.GHUB_USERNAME }}:${{ secrets.GHUB_ACCESS_TOKEN }}" -H "Accept: application/vnd.github.everest-preview+json" -H "Content-Type: application/json" https://api.github.com/repos/heutelbeck/sapl-demos/dispatches --data '{"event_type": "build_application"}'
      
    - name: Clean up local repository before caching
      run: rm -rf /.m2/repository/io/sapl
