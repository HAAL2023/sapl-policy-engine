apiVersion: v1
kind: Service
metadata:
  name: sapl-server-lt
spec:
  type: ClusterIP
  selector:
    app: sapl-server-lt
  ports:
    - protocol: TCP
      name: http
      # The targetPort defines is the port on the POD that requests get sent to
      targetPort: 8080
      # The port exposes the service on the specified port internally within the cluster.
      port: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sapl-server-lt
  labels:
    app: sapl-server-lt
spec:
  selector:
    matchLabels:
      app: sapl-server-lt
  replicas: 1
  template:
    metadata:
      labels:
        app: sapl-server-lt
    spec:
      volumes:
      - name: sapl-server-lt-pv-storage
        persistentVolumeClaim:
          claimName: sapl-server-lt-pv-claim
      containers:
        - name: sapl-server-lt
          image: nexus.openconjurer.org:30300/sapl-server-lt:2.0.0-SNAPSHOT
          volumeMounts:
            - name: sapl-server-lt-pv-storage
              mountPath: /data
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
              name: http
---
kind: Ingress
apiVersion: extensions/v1beta1
metadata:
  name: saple-server-lt
  labels:
    app: sapl-server-lt
  annotations:
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: basic-auth
    nginx.ingress.kubernetes.io/auth-realm: 'Authentication Required - Sapl-server-lt'
    nginx.ingress.kubernetes.io/proxy-body-size: 1g
    nginx.ingress.kubernetes.io/proxy-read-timeout: '2147483647'
    nginx.ingress.kubernetes.io/proxy-send-timeout: '2147483647'
    kubernetes.io/ingress.class: nginx
    cert-manager.io/issuer: letsencrypt-prod
    kubernetes.io/tls-acme: 'true'
spec:
  tls:
    - hosts:
        - sapl.exampleurl.com
      secretName: sapl.lt.local-tls
  rules:
    - host: sapl.exampleurl.com
      http:
        paths:
          - path: /
            backend:
              serviceName: sapl-server-lt 
              servicePort: 8080